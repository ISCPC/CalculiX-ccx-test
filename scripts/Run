#!/bin/bash

function show_environment () {
    # Show environment variable
    echo "=== Env ==" | tee -a $logfile
    env | egrep '(CCX_|OMP_)' | tee -a $logfile
    echo "==========" | tee -a $logfile

    if [ "${CCX_DEFAULT_SOLVER}" != "" ]; then
        echo "ccx module: ${CCX_EXE} (TESTLIST=${TESTLIST##*/}, SOLVER=${CCX_DEFAULT_SOLVER}, THREADS=$OMP_NUM_THREADS)" | tee -a $logfile
    else
        echo "ccx module: ${CCX_EXE} (TESTLIST=${TESTLIST##*/}, SOLVER=default, THREADS=$OMP_NUM_THREADS)" | tee -a $logfile
    fi
}

#rm -f error.*

BASEDIR=${PWD}
SUFFIX=`date +%Y%m%d-%H%M%S`

tempfile=${BASEDIR}/temp.${SUFFIX}
errorfile=${BASEDIR}/error.${SUFFIX}
logfile=${BASEDIR}/log.${SUFFIX}
total=0
ok=0
ng=0
fault=0

# For Release version
DISTROOT=${HOME}/local

export VESOLVER_PATH=${DISTROOT}/ve/lib/libvesolver.so

export LD_LIBRARY_PATH=/opt/intel/lib/intel64:/opt/intel/mkl/lib/intel64:${LD_LIBRARY_PATH}
export LD_LIBRARY_PATH=${DISTROOT}/lib:${LD_LIBRARY_PATH}
export VE_LD_LIBRARY_PATH=${DISTROOT}/ve/lib:${VE_LD_LIBRARY_PATH}

export CCX_DEFAULT_SOLVER=SPOOLES
#export CCX_DEFAULT_SOLVER=PARDISO
#export CCX_DEFAULT_SOLVER=SX-AUR_HS
#export CCX_DEFAULT_SOLVER=SX-AUR_SCALING
#export CCX_DEFAULT_SOLVER=ITERATIVESCALING

#export OMP_NUM_THREADS=1
unset OMP_NUM_THREADS

DEFAULT_CCX_EXE=~/local/bin/ccx_2.21_MT

#export CCX_NPROC_INTERPOLATE=4
export CCX_INTERPOLATE_MODE=2

TESTLIST=${BASEDIR}/lists/default
if [ $# -ge 1 ]; then
    if [ -f ${BASEDIR}/lists/$1 ]; then
        TESTLIST=${BASEDIR}/lists/$1
    else
        echo "WARNING: testlist '$1' not found. The default testset will be used."
    fi
fi

if [ $# -ge 2 ]; then
    if [ -x $2 ]; then
        CCX_EXE=$2
    else
        echo "ERROR: $2 is not exacutable."
        exit 1
    fi
else
    CCX_EXE=${DEFAULT_CCX_EXE}
fi

show_environment

echo "Start at `date`" | tee -a $logfile
starttime=`date "+%s"`

cd ../test
for i in `cat ${TESTLIST}`; do

#        echo " "
#        echo "example ${i%.inp}"
#        echo " "
    echo -n "${i%.inp}: " | tee -a $logfile
    echo "=== ${i%.inp} ===" >> $tempfile
    ((total=total+1))

#
#       removing the old .dat and .frd file, if any
#

    rm -f ${i%.inp}.dat
    rm -f ${i%.inp}.frd

#
#       executing CalculiX and generating the .dat and
#       the .frd file
#

    ${CCX_EXE} ${i%.inp} >> $tempfile 2>&1
    if [ $? -ne 0 ]; then
        echo "FAULT" | tee -a $logfile
        ((fault=fault+1))
        continue
    fi

#
#       check whether the .dat and .dat.ref files exist
#
    if [ ! -f ${i%.inp}.dat ]; then
	    echo "${i%.inp}.dat does not exist" >> $errorfile
        echo "NG" | tee -a $logfile
        ((ng=ng+1))
        continue
    fi
    if [ ! -f ${i%.inp}.dat.ref ]; then
        echo "${i%.inp}.dat.ref does not exist" >> $errorfile
        echo "NG" | tee -a $logfile
        ((ng=ng+1))
        continue
    fi
#
#       check whether the .dat and .dat.ref files have the same length
#

    export sum1=`wc -l ${i%.inp}.dat | awk '{print$1}'`
    export sum2=`wc -l ${i%.inp}.dat.ref | awk '{print$1}'`
    if [ $sum1 != $sum2 ]; then
        echo "${i%.inp}.dat and ${i%.inp}.dat.ref do not have the same size !!!!!!!!!!" >> $errorfile
        echo " ">> $errorfile
        echo "NG" | tee -a $logfile
        ((ng=ng+1))
        continue
    fi
#
#       check whether the .dat file contains NaN
#
#    if grep "NaN" ${i%.inp}.dat ; then
    grep "NaN" ${i%.inp}.dat >> $errorfile 2>&1
    if [ $? -eq 0 ] ; then
        echo "${i%.inp}.dat contains NaN !!!!!!!!!!" >> $errorfile
        echo " " >> $errorfile
        echo "NG" | tee -a $logfile
        ((ng=ng+1))
        continue
    fi

#
#       check whether the numbers in the .dat and .dat.ref files
#       do not differ by more than a given amount (defined in file
#       datcheck.pl)
#
    ./datcheck.pl ${i%.inp} >> $errorfile
#
#       check whether the .frd or the .frd.ref file exists
#

#    if grep "^ -5" ${i%.inp}.frd  ||[ -f ${i%.inp}.frd.ref ] ; then
    grep "^ -5" ${i%.inp}.frd  >> $errorfile 2>&1
    if [ $? -eq 0 ] || [ -f ${i%.inp}.frd.ref ] ; then
#
#           check that both files exist
#
        if [ ! -f ${i%.inp}.frd ]; then
            echo "${i%.inp}.frd does not exist" >> $errorfile
            echo "NG" | tee -a $logfile
            ((ng=ng+1))
            continue
        fi
        if [ ! -f ${i%.inp}.frd.ref ]; then
            echo "${i%.inp}.frd.ref does not exist" >> $errorfile
            echo "NG" | tee -a $logfile
            ((ng=ng+1))
            continue
        fi
#
#           check whether the .frd and .frd.ref files have the same length
#
	    
        export sum1=`wc -l ${i%.inp}.frd | awk '{print$1}'`
        export sum2=`wc -l ${i%.inp}.frd.ref | awk '{print$1}'`
        if [ $sum1 != $sum2 ]; then
            echo "${i%.inp}.frd and ${i%.inp}.frd.ref do not have the same size !!!!!!!!!!!!!!!!!!!!!!" >> $errorfile
            echo " ">> $errorfile
            echo "NG" | tee -a $logfile
            ((ng=ng+1))
            continue
        fi
#
#           check whether the numbers in the .frd and .frd.ref files
#           do not differ by more than a given amount (defined in file
#           frdcheck.pl)
#
        ./frdcheck.pl ${i%.inp} >> $errorfile
            
    fi
    echo "OK" | tee -a $logfile
    ((ok=ok+1))
done

rm -f spooles.out *.nam *.mtx fort.* dummy finemesh.*
#rm -f $tempfile

#
# Show environment and results
#
show_environment

echo "TOTAL/OK/NG/FAULT: $total / $ok / $ng / $fault" | tee -a $logfile
echo "check the existence of file $errorfile"
echo "if this file does not exist, the present results"
echo "agree with the reference results"
echo " "
endtime=`date "+%s"`
((elapse=endtime-starttime))
echo "Finish at `date`  Total Time: $elapse [sec]" | tee -a $logfile
